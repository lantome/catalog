{"version":3,"sources":["pages/catalog/components/Catalog/CatalogItem/styles.module.css","shared/Header/styles.module.css","pages/cart/components/Cart/CartItem/styles.module.css","pages/cart/components/Cart/styles.module.css","pages/catalog/components/Catalog/styles.module.css","shared/Loader/styles.module.css","store/catalog/actions.ts","store/catalog/reducer.ts","store/catalog/actionCreators.ts","api/catalog/getCatalog.ts","store/store.ts","hooks/useTypedSelector.ts","pages/cart/components/Cart/CartItem/index.tsx","pages/cart/components/Cart/index.tsx","shared/Header/index.tsx","shared/Loader/index.tsx","pages/catalog/components/Catalog/CatalogItem/index.tsx","pages/catalog/components/Catalog/index.tsx","App.tsx","index.tsx"],"names":["module","exports","CatalogActionTypes","initialState","items","loading","error","cart","addCartItemAC","CartItem","type","ADD_CART_ITEM","payload","setFullCartAC","cartItems","SET_FULL_CART","deleteCartItemAC","id","DELETE_CART_ITEM","setCatalogInitAC","CATALOG_FETCHING","setCatalogErrorAC","str","CATALOG_FETCH_ERROR","setCatalogSuccessAC","catalog","CATALOG_FETCH_SUCCESS","setCatalogAC","dispatch","a","axios","get","then","response","data","respone","setTimeout","console","rootReducer","combineReducers","state","action","name","image","price","filter","value","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","useTypedSelector","useSelector","addBuy","useDispatch","className","style","container","container__flex","catalog__button","onClick","ActionCreators","localStorage","setItem","JSON","stringify","item","Cart","initialCart","parse","getItem","useEffect","arrayBuy","map","someFoo","length","container__allPrice","reduce","prev","cur","Header","localySavedCart","header","header__inner","header__buttons","to","header__button","Loader","lds__default","CatalogItem","currentCartState","isInCart","find","catalog__image","src","alt","catalog__name","catalog__price","Catalog","fetching","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.770f16de.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"catalog\":\"styles_catalog__2XKEu\",\"catalog__image\":\"styles_catalog__image__wp7nR\",\"catalog__button\":\"styles_catalog__button__3DV8y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__WchN6\",\"header__inner\":\"styles_header__inner__2TFUL\",\"header__buttons\":\"styles_header__buttons__1slCx\",\"header__button\":\"styles_header__button__37IqH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__20H0D\",\"container__flex\":\"styles_container__flex__2uAsM\",\"catalog__button\":\"styles_catalog__button__25GgN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__1SLd3\",\"container__allPrice\":\"styles_container__allPrice__NjCGq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3anah\",\"fetching\":\"styles_fetching__2d3Pa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lds__default\":\"styles_lds__default__2mMPh\",\"lds-default\":\"styles_lds-default__9Ps93\"};","import { Models } from '../../shared';\n\nexport enum CatalogActionTypes {\n  CATALOG_FETCH_SUCCESS = 'CATALOG_FETCH_SUCCESS',\n  CATALOG_FETCHING = 'CATALOG_FETCHING',\n  CATALOG_FETCH_ERROR = 'CATALOG_FETCH_ERROR',\n  ADD_CART_ITEM = 'CARDITEM',\n  DELETE_CART_ITEM = 'DELETE_CARD_ITEM',\n  SET_FULL_CART = 'SET_FULL_CART',\n}\n\ninterface CardItemAction {\n  type: CatalogActionTypes.ADD_CART_ITEM;\n  payload: Models.CatalogItem;\n}\n\ninterface DeleteCardItemAtion {\n  type: CatalogActionTypes.DELETE_CART_ITEM;\n  payload: number;\n}\n\ninterface SetCatalogItemsSuccessAction {\n  type: CatalogActionTypes.CATALOG_FETCH_SUCCESS;\n  payload: Models.CatalogItem[];\n}\n\ninterface SetCatalogItemsFetchAction {\n  type: CatalogActionTypes.CATALOG_FETCHING;\n}\n\ninterface SetCatalogItemsErrorAction {\n  type: CatalogActionTypes.CATALOG_FETCH_ERROR;\n  payload: string;\n}\n\ninterface SetFullCartAction {\n  type: CatalogActionTypes.SET_FULL_CART;\n  payload: Models.CatalogItem[];\n}\n\nexport type CatalogAction =\n  | SetCatalogItemsSuccessAction\n  | SetCatalogItemsFetchAction\n  | SetCatalogItemsErrorAction\n  | DeleteCardItemAtion\n  | CardItemAction\n  | SetFullCartAction;\n","import { CatalogAction, CatalogActionTypes } from './actions';\nimport { Models } from '../../shared';\n\ninterface CatalogState {\n  items: Models.CatalogItem[];\n  loading: boolean;\n  error: null | string;\n  cart: Models.CatalogItem[];\n}\n\nconst initialState: Readonly<CatalogState> = {\n  items: [],\n  loading: false,\n  error: null,\n  cart: [],\n};\n\nexport const catalogReducer = (\n  state = initialState,\n  action: CatalogAction,\n): CatalogState => {\n  switch (action.type) {\n    case CatalogActionTypes.CATALOG_FETCH_SUCCESS:\n      return {\n        ...state,\n        items: action.payload,\n        loading: false,\n        error: null,\n      };\n    case CatalogActionTypes.CATALOG_FETCHING:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n        items: [],\n      };\n    case CatalogActionTypes.CATALOG_FETCH_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n        items: [],\n      };\n    case CatalogActionTypes.ADD_CART_ITEM:\n      return {\n        ...state,\n        cart: [\n          ...state.cart,\n          {\n            id: action.payload.id,\n            name: action.payload.name,\n            image: action.payload.image,\n            price: action.payload.price,\n          },\n        ],\n      };\n    case CatalogActionTypes.SET_FULL_CART:\n      return {\n        ...state,\n        cart: action.payload,\n      };\n    case CatalogActionTypes.DELETE_CART_ITEM:\n      return {\n        ...state,\n        cart: state.cart.filter((value) => value.id !== action.payload),\n      };\n    default:\n      return state;\n  }\n};\n","import { CatalogAction, CatalogActionTypes } from './actions';\nimport { Models } from '../../shared';\nimport { Dispatch } from 'redux';\nimport { getCatalog } from '../../api';\n\nexport const addCartItemAC = (CartItem: Models.CatalogItem): CatalogAction => {\n  return {\n    type: CatalogActionTypes.ADD_CART_ITEM,\n    payload: CartItem,\n  };\n};\n\nexport const setFullCartAC = (\n  cartItems: Models.CatalogItem[],\n): CatalogAction => {\n  return {\n    type: CatalogActionTypes.SET_FULL_CART,\n    payload: cartItems,\n  };\n};\n\nexport const deleteCartItemAC = (id: number): CatalogAction => {\n  return {\n    type: CatalogActionTypes.DELETE_CART_ITEM,\n    payload: id,\n  };\n};\n\nexport const setCatalogInitAC = (): CatalogAction => ({\n  type: CatalogActionTypes.CATALOG_FETCHING,\n});\n\nexport const setCatalogErrorAC = (str: string): CatalogAction => {\n  return {\n    type: CatalogActionTypes.CATALOG_FETCH_ERROR,\n    payload: str,\n  };\n};\n\nexport const setCatalogSuccessAC = (\n  catalog: Models.CatalogItem[],\n): CatalogAction => {\n  return {\n    type: CatalogActionTypes.CATALOG_FETCH_SUCCESS,\n    payload: catalog,\n  };\n};\n\nexport const setCatalogAC = () => {\n  return async (dispatch: Dispatch<CatalogAction>) => {\n    dispatch(setCatalogInitAC());\n    try {\n      const respone = await getCatalog();\n      setTimeout(() => {\n        dispatch(setCatalogSuccessAC(respone));\n      }, 500);\n    } catch (e) {\n      console.error(e);\n      dispatch(setCatalogErrorAC('Catalog fetching error'));\n    }\n  };\n};\n","import axios from 'axios';\nimport { CatalogItem } from '../../shared/models/models';\n\nexport function getCatalog() {\n  return axios\n    .get<{ items: CatalogItem[] }>(`https://appevent.ru/dev/task1/catalog`)\n    .then((response) => response.data.items);\n}\n","import { combineReducers, createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { catalogReducer } from './catalog';\n\nconst rootReducer = combineReducers({\n  catalog: catalogReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nconst composeEnhancers =\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk)),\n);\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\nimport { RootState } from '../store/store';\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import style from './styles.module.css';\nimport { ActionCreators } from '../../../../../store';\nimport { useDispatch } from 'react-redux';\nimport { Models } from '../../../../../shared';\nimport { useTypedSelector } from '../../../../../hooks';\n\ninterface Prop {\n  addBuy: Models.CatalogItem;\n}\n\nexport const CartItem: React.FC<Prop> = ({ addBuy }) => {\n  const dispatch = useDispatch();\n\n  const { cart } = useTypedSelector((state) => state.catalog);\n\n  const deleteCardItem = () => {\n    dispatch(ActionCreators.deleteCartItemAC(addBuy.id));\n    localStorage.setItem(\n      'cart',\n      JSON.stringify(cart.filter((item) => item.id !== addBuy.id)),\n    );\n  };\n\n  return (\n    <div className={style.container}>\n      <div>{addBuy.name}</div>\n      <div className={style.container__flex}>\n        <div>{addBuy.price} ₽</div>\n        <div>\n          <button className={style.catalog__button} onClick={deleteCardItem}>\n            Убрать\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import style from './styles.module.css';\nimport { CartItem } from './CartItem';\nimport { Models } from '../../../../shared';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ActionCreators } from '../../../../store';\nimport { useTypedSelector } from '../../../../hooks';\n\nexport const Cart: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const { cart } = useTypedSelector((state) => state.catalog);\n\n  const initialCart = JSON.parse(\n    localStorage.getItem('cart')!,\n  ) as Models.CatalogItem[];\n\n  useEffect(() => {\n    dispatch(ActionCreators.setFullCartAC(initialCart));\n  }, [dispatch]);\n\n  let arrayBuy = initialCart.map((someFoo) => someFoo.price);\n\n  const priceCounter = (prev: number, cur: number) => prev + cur;\n\n  return (\n    <div className={style.container}>\n      {cart.length ? (\n        cart.map((addBuy) => <CartItem key={addBuy.id} addBuy={addBuy} />)\n      ) : (\n        <h1>Корзина пуста</h1>\n      )}\n      <div>\n        {arrayBuy.length > 0 ? (\n          <div className={style.container__allPrice}>\n            Итого с вас: {arrayBuy.reduce(priceCounter)} ₽\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n    </div>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport { useTypedSelector } from '../../hooks';\nimport style from './styles.module.css';\n\nexport const Header: React.FC = () => {\n  const localySavedCart = JSON.parse(localStorage.getItem('cart')!);\n\n  const { cart } = useTypedSelector((state) => state.catalog);\n\n  return (\n    <header className={style.header}>\n      <div className=\"container\">\n        <div className={style.header__inner}>\n          <div className={style.header__buttons}>\n            <NavLink to=\"/\">\n              <button className={style.header__button}>Каталог</button>\n            </NavLink>\n            <NavLink to=\"/basket\">\n              <button className={style.header__button}>\n                Корзина: {cart.length || localySavedCart.length}\n              </button>\n            </NavLink>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n","import style from './styles.module.css';\n\nexport const Loader: React.FC = () => {\n  return (\n    <div className={style.lds__default}>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { ActionCreators } from '../../../../../store';\nimport style from './styles.module.css';\nimport { NavLink } from 'react-router-dom';\nimport { Models } from '../../../../../shared';\n\ninterface Prop {\n  catalog: Models.CatalogItem;\n  currentCartState: Models.CatalogItem[];\n}\n\nexport const CatalogItem: React.FC<Prop> = ({\n  catalog,\n  currentCartState = [],\n}) => {\n  const dispatch = useDispatch();\n\n  const isInCart = currentCartState.find((item) => item.id === catalog.id);\n\n  const addCardItem = () => {\n    dispatch(\n      ActionCreators.addCartItemAC({\n        id: catalog.id,\n        image: catalog.image,\n        name: catalog.name,\n        price: catalog.price,\n      }),\n    );\n\n    localStorage.setItem(\n      'cart',\n      JSON.stringify([...currentCartState, catalog]),\n    );\n  };\n\n  return (\n    <div className={style.catalog}>\n      <div>\n        <img\n          className={style.catalog__image}\n          src={catalog.image}\n          alt=\"catalog item\"\n        />\n      </div>\n      <div className={style.catalog__name}>{catalog.name}</div>\n      <div className={style.catalog__price}>Цена: {catalog.price} ₽</div>\n      {isInCart ? (\n        <div>\n          <NavLink to=\"/basket\">\n            <button className={style.catalog__button}>Оформить заказ</button>\n          </NavLink>\n        </div>\n      ) : (\n        <div>\n          <button onClick={addCardItem} className={style.catalog__button}>\n            Добавить в корзину\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { useTypedSelector } from '../../../../hooks';\nimport { Loader } from '../../../../shared';\nimport { CatalogItem } from './CatalogItem';\nimport style from './styles.module.css';\n\nexport const Catalog: React.FC = () => {\n  const { items, loading } = useTypedSelector((state) => state.catalog);\n\n  const currentCartState = JSON.parse(localStorage.getItem('cart')!);\n\n  return (\n    <div>\n      {loading ? (\n        <div className={style.fetching}>\n          <Loader />\n        </div>\n      ) : (\n        <div className={style.container}>\n          {items.map((catalog) => (\n            <CatalogItem\n              key={catalog.id}\n              catalog={catalog}\n              currentCartState={currentCartState}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport { Cart, Catalog } from './pages';\nimport { Header } from './shared';\nimport { setCatalogAC } from './store/catalog/actionCreators';\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const cartList = localStorage.getItem('cart');\n\n  if (!cartList) {\n    localStorage.setItem('cart', '[]');\n  }\n\n  dispatch(setCatalogAC());\n\n  return (\n    <BrowserRouter>\n      <Header />\n      <div className=\"container\">\n        <Switch>\n          <Route exact path=\"/\" component={Catalog} />\n          <Route exact path=\"/basket\" component={Cart} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { store } from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}